package {
	import flash.display.MovieClip;
	import flash.events.*

	public class Map extends MovieClip {
		/*
[
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,2,2,2,2,2,2,2,4,2,2,11,11,11,11,22,2,2,2,2,2,2,2,4,2,2],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,2,2,2,2,2,4,2,2,2,2,11,11,11,11,22,2,2,2,2,2,4,2,2,2,2],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,3,2,2,2,5,2,2,2,2,2,11,11,11,11,22,3,2,2,2,5,2,2,2,2,2],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,2,5,2,2,2,2,2,2,2,2,11,11,11,11,22,2,5,2,2,2,2,2,2,2,2],
[11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,11,11,11,11,22,2,2,2,2,2,2,2,2,2,2,11,11,11,11,22,12,13,13,14,2,2,2,2,2,2],
[11,11,11,11,22,2,2,2,2,2,2,2,2,2,2,11,11,11,11,22,2,2,2,2,2,2,2,2,2,2,11,11,11,11,22,22,16,17,2,2,2,2,2,2,2],
[11,11,11,11,22,2,2,12,13,13,13,13,13,13,14,11,11,11,11,22,2,2,4,2,3,2,2,2,2,2,11,11,11,11,22,22,26,27,2,3,2,2,2,2,2],
[11,11,11,11,22,2,2,22,2,2,2,2,2,2,24,11,11,11,11,22,2,4,2,2,2,3,2,2,2,2,11,11,11,11,22,22,36,37,2,2,3,2,2,2,2],
[11,11,11,11,22,2,2,32,33,14,2,2,2,2,24,11,11,11,11,22,2,2,2,13,13,13,13,13,13,13,11,11,11,11,22,32,33,33,34,2,2,5,2,6,2],
[11,11,11,11,22,2,2,2,2,24,2,2,2,2,24,11,11,11,11,22,2,2,2,2,2,2,2,2,2,6,11,11,11,11,22,2,2,2,2,2,2,2,2,2,6],
[11,11,11,11,22,2,2,2,2,24,2,2,2,2,24,11,11,11,11,22,2,2,4,2,2,2,2,2,2,2,11,11,11,11,32,33,33,33,33,33,33,33,33,33,33],
[11,11,11,11,22,2,2,2,2,24,2,2,2,2,24,11,11,11,11,22,2,2,2,2,2,4,4,2,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[11,11,11,11,22,2,2,2,2,24,2,2,2,2,24,11,11,11,11,22,2,2,2,2,2,2,2,4,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[11,11,11,11,22,2,2,2,2,24,2,2,2,2,24,11,11,11,11,22,2,2,2,2,2,2,2,2,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[11,11,11,11,22,2,2,2,2,32,13,2,2,13,34,11,11,11,11,22,2,2,2,2,2,2,2,4,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11]
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,4,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,3,2,2,2,5,2,2,2,2,22],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,5,2,2,2,5,2,2,2,2,2,2,2,22],
[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,2,3,2,2,2,3,2,2,2,3,2,2,3,2,2,2,5,2,2,2,2,2,3,2,2,2,2,2,22],
[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,15,16,17,2,15,16,17,2,15,16,17,2,3,2,2,2,2,2,15,16,17,2,2,2,2,2,2,2,22],
[2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,25,26,27,2,25,26,27,2,25,26,27,2,3,2,2,2,3,2,25,26,27,2,2,3,2,2,2,2,22],
[2,2,2,3,3,3,3,3,3,3,3,3,6,4,2,2,35,36,37,2,35,36,37,2,35,36,37,2,3,2,5,2,2,2,35,36,37,2,2,2,3,2,2,2,22],
[2,2,2,3,2,2,2,2,2,6,2,2,2,2,2,13,13,13,13,13,13,2,2,2,2,2,2,2,3,2,2,5,2,2,2,2,2,2,2,2,2,5,2,6,32],
[2,2,6,2,2,2,2,12,2,6,2,13,14,2,2,2,15,16,17,2,15,16,17,2,15,16,17,2,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6],
[2,2,5,2,2,2,2,22,2,6,2,2,24,2,2,2,25,26,27,2,25,26,27,2,25,26,27,2,3,2,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33],
[2,2,6,2,2,2,2,22,15,16,17,2,24,2,2,2,35,36,37,2,35,36,37,2,35,36,37,2,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[2,2,2,6,2,2,2,22,25,26,27,2,24,2,2,4,2,3,2,2,2,3,2,2,2,3,2,4,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[2,2,2,5,2,2,2,22,35,36,37,2,24,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[2,2,2,2,2,2,2,32,33,33,33,33,34,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11]
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,14,2,2,24,11,11,11,11,2,2,2,2,2,2,2,2,2,2,24,11,11,11,11],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,2,2,15,16,17,2,24,2,2,24,11,11,11,11,2,2,2,2,2,2,2,2,2,2,24,11,11,11,11],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,2,4,25,26,27,3,24,2,2,24,11,11,11,11,2,2,2,2,2,2,2,2,24,2,24,11,11,11,11],
[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,3,2,35,36,37,4,24,2,2,24,11,11,11,11,2,2,2,2,2,2,2,2,24,2,24,11,11,11,11],
[13,13,13,13,13,13,13,13,13,13,14,11,11,11,11,34,3,2,2,2,2,4,24,2,2,24,11,11,11,11,15,16,17,2,2,15,16,17,24,2,24,11,11,11,11],
[2,2,2,2,2,2,2,2,2,2,24,11,11,11,11,2,2,2,15,16,17,2,24,2,2,24,11,11,11,11,25,26,27,2,2,25,26,27,24,2,24,11,11,11,11],
[2,2,2,2,2,2,2,2,2,2,24,11,11,11,11,4,2,4,25,26,27,3,24,2,2,24,11,11,11,11,35,36,37,2,2,35,36,37,24,2,24,11,11,11,11],
[2,2,2,2,2,2,2,2,2,2,24,11,11,11,11,2,3,2,35,36,37,6,24,2,2,24,11,11,11,11,2,2,2,2,2,2,2,2,24,2,24,11,11,11,11],
[3,2,2,2,2,2,2,2,2,2,24,11,11,11,11,2,2,2,6,3,4,2,24,2,2,24,11,11,11,11,13,13,13,13,13,13,13,13,34,2,24,11,11,11,11],
[2,2,3,2,2,2,2,2,2,2,24,11,11,11,11,14,3,2,15,16,17,2,24,2,2,24,11,11,11,11,2,2,2,2,2,2,2,2,2,2,24,11,11,11,11],
[2,2,12,13,13,13,13,13,13,14,24,11,11,11,11,22,2,4,25,26,27,2,24,2,2,24,11,11,11,11,33,33,33,33,33,33,33,33,33,33,34,11,11,11,11],
[2,2,22,2,2,2,15,16,17,24,24,11,11,11,11,22,2,2,35,36,37,2,24,2,2,24,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[2,2,22,2,2,2,25,26,27,24,24,11,11,11,11,22,2,2,2,2,2,2,24,2,2,24,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[2,2,32,2,2,14,35,36,37,24,24,11,11,11,11,32,33,33,33,33,33,33,34,2,2,24,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],
[2,2,2,2,2,32,33,33,33,34,24,11,11,11,11,2,2,2,2,2,2,2,2,2,2,24,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11]
]		
		*/
		private var tileSize: uint = 50; //tile size on stage
		private var aMap: Array = [
			[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
			[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
			[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
			[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
			[11, 11, 11, 11, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 12, 13, 13, 13, 13, 13, 13, 14, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 22, 2, 2, 2, 2, 2, 2, 24, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 32, 33, 14, 2, 2, 2, 2, 24, 2, 2, 2, 3, 2, 2, 2, 2, 2, 6, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 24, 2, 2, 2, 2, 24, 2, 2, 6, 2, 2, 2, 2, 12, 2, 6, 2, 13, 14, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 24, 2, 2, 2, 2, 24, 2, 2, 5, 2, 2, 2, 2, 22, 2, 6, 2, 2, 24, 2, 2, 2, 2, 12, 13, 13, 13, 13, 13, 13, 14, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 24, 2, 2, 2, 2, 24, 2, 2, 6, 2, 2, 2, 2, 22, 15, 16, 17, 2, 24, 2, 2, 2, 2, 22, 2, 2, 2, 15, 16, 17, 24, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 24, 2, 2, 2, 2, 24, 2, 2, 2, 6, 2, 2, 2, 22, 25, 26, 27, 2, 24, 2, 2, 2, 2, 22, 2, 2, 2, 25, 26, 27, 24, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 24, 2, 2, 2, 2, 24, 2, 2, 2, 5, 2, 2, 2, 22, 35, 36, 37, 2, 24, 2, 2, 2, 2, 32, 2, 2, 14, 35, 36, 37, 24, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 32, 13, 2, 2, 13, 34, 2, 2, 2, 2, 2, 2, 2, 32, 33, 33, 33, 33, 34, 2, 2, 2, 2, 2, 2, 2, 32, 33, 33, 33, 34, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 12, 13, 13, 13, 13, 13, 13, 14, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 22, 2, 2, 15, 16, 17, 2, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 3, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 22, 2, 4, 25, 26, 27, 3, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 22, 3, 2, 35, 36, 37, 4, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 3, 2, 34, 3, 2, 2, 2, 2, 4, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 15, 16, 17, 2, 15, 16, 17, 2, 15, 16, 17, 2, 3, 2, 2, 2, 2, 15, 16, 17, 2, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 4, 2, 3, 2, 2, 2, 2, 2, 2, 25, 26, 27, 2, 25, 26, 27, 2, 25, 26, 27, 2, 3, 2, 4, 2, 4, 25, 26, 27, 3, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 35, 36, 37, 2, 35, 36, 37, 2, 35, 36, 37, 2, 3, 2, 2, 3, 2, 35, 36, 37, 6, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 6, 3, 4, 2, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 15, 16, 17, 2, 15, 16, 17, 2, 15, 16, 17, 2, 3, 6, 14, 3, 2, 15, 16, 17, 2, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 25, 26, 27, 2, 25, 26, 27, 2, 25, 26, 27, 2, 3, 2, 22, 2, 4, 25, 26, 27, 2, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 4, 4, 2, 2, 2, 2, 35, 36, 37, 2, 35, 36, 37, 2, 35, 36, 37, 2, 3, 2, 22, 2, 2, 35, 36, 37, 2, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 4, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 2, 4, 3, 2, 22, 2, 2, 2, 2, 2, 2, 24, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 32, 33, 33, 33, 33, 33, 33, 34, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 3, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 5, 2, 2, 2, 2, 22, 2, 2, 2, 2, 2, 2, 2, 2, 24, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 22, 2, 2, 2, 2, 2, 2, 2, 2, 24, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 12, 13, 13, 14, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 22, 15, 16, 17, 2, 2, 15, 16, 17, 24, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 22, 16, 17, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 15, 16, 17, 2, 2, 2, 2, 2, 2, 2, 22, 25, 26, 27, 2, 2, 25, 26, 27, 24, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 22, 26, 27, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 25, 26, 27, 2, 2, 3, 2, 2, 2, 2, 22, 35, 36, 37, 2, 2, 35, 36, 37, 24, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 22, 36, 37, 2, 2, 3, 2, 2, 2, 2, 5, 2, 2, 2, 35, 36, 37, 2, 2, 2, 3, 2, 2, 2, 22, 2, 2, 2, 2, 2, 2, 2, 2, 24, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 32, 33, 33, 34, 2, 2, 5, 2, 6, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 6, 32, 13, 13, 13, 13, 13, 13, 13, 13, 34, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 22, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24, 11, 11, 11, 11],
			[11, 11, 11, 11, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 11, 11, 11, 11],
			[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
			[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
			[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
			[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11]
		] //map tiles 2D Array
		private var aTiles: Array;

		public function Map() {
			addEventListener(Event.ADDED_TO_STAGE, addedToStage);
		}


		//--PLACED ON SCENE--//
		private function addedToStage(e: Event): void {
			removeEventListener(Event.ADDED_TO_STAGE, addedToStage);
			addEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);
			x = -500;
			y = -500;
			setTiles();
		}


		//--GENERATION--//
		private function setTiles(): void { //sets each tile of map in its correct position
			var posY: uint = 0;
			for each(var aMapRow in aMap) {
				var posX: uint = 0;
				posY += tileSize;
				for each(var tile in aMapRow) {
					posX += tileSize;
					tilePlaceholder.addChild(new Tile(posX, posY, tile));
				}
			}
		}


		//--MOVE--//
		public function moveMap(angle: Number, _speed: Number): void { //moves MAP to "move CHARACTER"
			y -= Math.sin(angle) * _speed;
			x -= Math.cos(angle) * _speed;
		}


		//--GETTER--//
		public function getPos(): Array { //get map coordinate
			return [x, y];
		}
		public function getTileChild(posX: uint, posY: uint, rowOff: int, colOff: int, inMap: Boolean = false): uint { //get tile child number
			var row: int;
			var col: int;
			if (inMap) {
				row = posY / tileSize + rowOff;
				col = posX / tileSize + colOff;
			} else {
				row = (posY - tileSize) / tileSize + rowOff;
				col = (posX - tileSize) / tileSize + colOff;
			}

			var aLength = aMap[0].length;

			var tileChild: uint = row * aLength + col;

			return tileChild;
		}


		//--REMOVED FROM SCENE--//
		private function removedFromStage(e: Event): void {
			removeEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);
			addEventListener(Event.ADDED_TO_STAGE, addedToStage);
		}
	}
}